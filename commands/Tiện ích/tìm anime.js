const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('timanime')
        .setDescription('T√¨m ki·∫øm th√¥ng tin anime t·ª´ API MAL.')
        .addStringOption(option =>
            option.setName('name')
                .setDescription('T√™n anime c·∫ßn t√¨m ki·∫øm')
                .setRequired(true)),
    async execute(interaction) {
        const animeName = interaction.options.getString('name');
        const apiUrl = `https://zaikyoo.onrender.com/api/mal?title=${encodeURIComponent(animeName)}`;

        try {
            // G·ªçi API ƒë·ªÉ l·∫•y d·ªØ li·ªáu
            const response = await axios.get(apiUrl);
            const data = response.data;

            // Ki·ªÉm tra d·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API
            if (!data || !data.title) {
                return interaction.reply({
                    content: '‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin anime n√†o kh·ªõp v·ªõi y√™u c·∫ßu.',
                    ephemeral: true
                });
            }

            // T·∫°o Embed ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin anime
            const embed = new EmbedBuilder()
                .setColor('Blue')
                .setTitle(`üì∫ Anime: ${data.title}`)
                .setURL(data.url)
                .setDescription(data.description || 'Kh√¥ng c√≥ m√¥ t·∫£ chi ti·∫øt.')
                .setThumbnail(data.picture)
                .addFields(
                    { name: 'T√™n ti·∫øng Nh·∫≠t', value: data.japanese || 'N/A', inline: true },
                    { name: 'Lo·∫°i h√¨nh', value: data.type || 'N/A', inline: true },
                    { name: 'Tr·∫°ng th√°i', value: data.status || 'N/A', inline: true },
                    { name: 'S·ªë t·∫≠p', value: data.episodes || 'N/A', inline: true },
                    { name: 'Th·ªùi l∆∞·ª£ng', value: data.duration || 'N/A', inline: true },
                    { name: 'Th·ªÉ lo·∫°i', value: data.genres || 'N/A', inline: true },
                    { name: 'ƒêi·ªÉm ƒë√°nh gi√°', value: `${data.score} (${data.scoreStats})`, inline: true },
                    { name: 'X·∫øp h·∫°ng', value: `${data.ranked} (${data.popularity})`, inline: true },
                    { name: 'Ng√†y ph√°t s√≥ng', value: data.aired || 'N/A', inline: true },
                    { name: 'Nh√† s·∫£n xu·∫•t', value: data.producers || 'N/A', inline: true }
                )
                .setFooter({ text: 'Th√¥ng tin t·ª´ MAL API', iconURL: 'https://cdn.myanimelist.net/images/faviconv5.ico' })
                .setTimestamp();

            // G·ª≠i Embed k·∫øt qu·∫£
            await interaction.reply({ embeds: [embed] });

        } catch (error) {
            console.error(error);
            await interaction.reply({
                content: '‚ùå ƒê√£ x·∫£y ra l·ªói khi g·ªçi API ho·∫∑c kh√¥ng t√¨m th·∫•y th√¥ng tin.',
                ephemeral: true
            });
        }
    },
};
