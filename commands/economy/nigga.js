const { SlashCommandBuilder } = require('@discordjs/builders');
const { ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('nigga')
        .setDescription('Ch·ªçn c√¥ng vi·ªác cho th·∫±ng H√πng C√¥ng N√¥ng.'),
    async execute(interaction) {
        const buttons = new ActionRowBuilder().addComponents(
            new ButtonBuilder()
                .setCustomId('farm')
                .setLabel('L√†m ru·ªông üåæ')
                .setStyle(ButtonStyle.Primary),
            new ButtonBuilder()
                .setCustomId('mine')
                .setLabel('ƒê√†o qu·∫∑ng ‚õèÔ∏è')
                .setStyle(ButtonStyle.Success),
            new ButtonBuilder()
                .setCustomId('hunt')
                .setLabel('SƒÉn b·∫Øn ü¶å')
                .setStyle(ButtonStyle.Danger)
        );

        await interaction.reply({
            content: 'H√£y ch·ªçn c√¥ng vi·ªác m√† b·∫°n mu·ªën cho n√¥ l·ªá H√πng th·ª±c hi·ªán:',
            components: [buttons]
        });

        const filter = (i) => i.user.id === interaction.user.id; 
        const collector = interaction.channel.createMessageComponentCollector({ filter, time: 15000 });

        collector.on('collect', async (buttonInteraction) => {
            let reward;
            let workDescription;

            if (buttonInteraction.customId === 'farm') {
                reward = Math.floor(Math.random() * 51) + 50; // 50-100 XC
                workDescription = 'Th·∫±ng H√πng ƒë√£ c√†y 100 th·ª≠a ru·ªông!';
            } else if (buttonInteraction.customId === 'mine') {
                reward = Math.floor(Math.random() * 101) + 100; // 100-200 XC
                workDescription = 'Th·∫±ng H√πng ƒë√£ ƒë√†o ƒë∆∞·ª£c 2 vi√™n kim c∆∞∆°ngüíé‚úÖ!';
            } else if (buttonInteraction.customId === 'hunt') {
                reward = Math.floor(Math.random() * 151) + 200; // 200-350 XC
                workDescription = 'Th·∫±ng H√πng ƒë√£ b·ªã l·ª£n r·ª´ng kill ch·∫øtü™¶‚úÖ!';
            }

            const embed = new EmbedBuilder()
                .setColor('Green')
                .setTitle('üéâ C√¥ng vi·ªác ho√†n th√†nh!')
                .setDescription(workDescription)
                .addFields({ name: 'Ph·∫ßn th∆∞·ªüng', value: `${reward} XC` });

            await buttonInteraction.update({
                content: 'C√¥ng vi·ªác ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω!',
                embeds: [embed],
                components: [] // X√≥a n√∫t sau khi x·ª≠ l√Ω
            });
        });

        collector.on('end', async (collected) => {
            if (collected.size === 0) {
                await interaction.editReply({
                    content: 'B·∫°n kh√¥ng ch·ªçn c√¥ng vi·ªác n√†o! H√£y th·ª≠ l·∫°i.',
                    components: []
                });
            }
        });
    }
};

